from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
import openai
import os
from dotenv import load_dotenv
import telegram
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup

load_dotenv()
client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = telegram.Bot(token=TELEGRAM_TOKEN)

app = FastAPI()

user_states = {}

# –°—Ç–∞—Ç–∏—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–≤—Å–µ–≥–¥–∞ –≤–Ω–∏–∑—É)
static_keyboard = ReplyKeyboardMarkup(
    [['–†–µ—Å—Ç–∞—Ä—Ç', 'Help', '–û –ø—Ä–æ–µ–∫—Ç–µ', '–û—Ç–∑—ã–≤']],
    resize_keyboard=True,
    one_time_keyboard=False
)

def load_prompt_template(role_key):
    file_path = f"prompts/{role_key}.txt"
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            return f.read()
    except Exception:
        return "–†–æ–ª—å: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\n–¢–æ–Ω: \n–°—Ç–∏–ª—å: \n–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: "

def send_role_keyboard(chat_id):
    keyboard = [
        [
            InlineKeyboardButton("–†–∞–±–æ—Ç–∞", callback_data='role_work'),
            InlineKeyboardButton("–û–±—É—á–µ–Ω–∏–µ", callback_data='role_study')
        ],
        [
            InlineKeyboardButton("–ë–∏–∑–Ω–µ—Å", callback_data='role_business'),
            InlineKeyboardButton("–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", callback_data='role_marketing')
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    bot.send_message(chat_id=chat_id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ñ–µ—Ä—É:", reply_markup=reply_markup)
    
@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()

    # CALLBACK-–ö–ù–û–ü–ö–ò (—Ç–æ–ª—å–∫–æ –≤—ã–±–æ—Ä —Å—Ñ–µ—Ä—ã)
    callback_query = data.get("callback_query", {})
    if callback_query:
        selection = callback_query.get("data")
        chat_id = callback_query.get("message", {}).get("chat", {}).get("id")

        if selection.startswith("role_"):
            role_key = selection.split("_")[1]
            template_text = load_prompt_template(role_key)
            user_states[chat_id] = {"step": 1, "template": template_text}

            EXAMPLES = {
                "work": "–í–∞—à–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å? –ù–∞–ø—Ä–∏–º–µ—Ä: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤', '–ò–Ω–∂–µ–Ω–µ—Ä', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç'",
                "study": "–í–∞—à –∫—É—Ä—Å/—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è? –ù–∞–ø—Ä–∏–º–µ—Ä: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è', 'Frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω'",
                "business": "–í–∏–¥ –±–∏–∑–Ω–µ—Å–∞? –ù–∞–ø—Ä–∏–º–µ—Ä: '–†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è', '–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã', 'IT-–∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥'",
                "marketing": "–¢–∏–ø –∑–∞–¥–∞—á–∏? –ù–∞–ø—Ä–∏–º–µ—Ä: '–ó–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º—ã', '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤', '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–æ–≥–∞–Ω–∞'"
            }
            bot.send_message(chat_id=chat_id, text=EXAMPLES[role_key], reply_markup=static_keyboard)
            bot.answer_callback_query(callback_query_id=callback_query["id"])
            return JSONResponse(content={"ok": True})

    # –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô
    message = data.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    text = message.get("text", "").strip() if "text" in message else ""

    if not chat_id or not text:
        return JSONResponse(content={"ok": True})

    state = user_states.get(chat_id, {"step": 0})

    # –°—Ç–∞—Ä—Ç: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, –≤—ã–±–æ—Ä —Å—Ñ–µ—Ä—ã
    if text.lower() in {"/start", "start"}:
        user_states[chat_id] = {"step": 0}
        bot.send_message(
            chat_id=chat_id,
            text="""–ü—Ä–∏–≤–µ—Ç, —è ASKT ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –ó–Ω–∞–Ω–∏–π.

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ GPT –¥–∞–∂–µ –±–µ–∑ –æ–ø—ã—Ç–∞.  
–í—ã–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É, –æ—Ç–≤–µ—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞ ‚Äî –∏ –ø–æ–ª—É—á–∏ —á—ë—Ç–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

üìå –î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π:  
‚Äî –∂–º–∏ ¬´Help¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç  
‚Äî –∂–º–∏ ¬´–û –ø—Ä–æ–µ–∫—Ç–µ¬ª, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω

–ì–æ—Ç–æ–≤? –ù–∞—á–Ω—ë–º üëá
""",
            reply_markup=static_keyboard
        )
        send_role_keyboard(chat_id)
        return JSONResponse(content={"ok": True})

    # –†–µ—Å—Ç–∞—Ä—Ç: —Ç–æ–ª—å–∫–æ –≤—ã–±–æ—Ä —Å—Ñ–µ—Ä—ã (–±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è)
    if text == "–†–µ—Å—Ç–∞—Ä—Ç":
        user_states[chat_id] = {"step": 0}
        send_role_keyboard(chat_id)
        return JSONResponse(content={"ok": True})

    # Help: –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç help
    if text == "Help":
        bot.send_message(chat_id=chat_id, text= """üõ† –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç ASKT:

1Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ—à—å —Å—Ñ–µ—Ä—É ‚Äî –†–∞–±–æ—Ç–∞, –£—á—ë–±–∞, –ë–∏–∑–Ω–µ—Å –∏–ª–∏ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥  
2Ô∏è‚É£ –û—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ 3 –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–∞  
3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ—à—å —Ç–æ—á–Ω—ã–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏

–ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?

GPT ‚Äî —É–º–Ω—ã–π, –Ω–æ –Ω–µ –≤–æ–ª—à–µ–±–Ω–∏–∫.  
–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π ‚Äî –∏ –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ.  
–ß–µ–º —á—ë—Ç—á–µ —Ç—ã –æ–±—ä—è—Å–Ω–∏—à—å, —á—Ç–æ —Ö–æ—á–µ—à—å ‚Äî —Ç–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.  
ASKT –ø–æ–º–æ–≥–∞–µ—Ç:  
‚Äî —É—Ç–æ—á–Ω–∏—Ç—å —Å—É—Ç—å  
‚Äî –≤—ã–¥–µ–ª–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ  
‚Äî –∑–∞–¥–∞—Ç—å —Ü–µ–ª—å  
–¢—ã –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ—à—å ‚Äî –æ—Å—Ç–∞–ª—å–Ω–æ–µ –±–æ—Ç —Å–æ–±–µ—Ä—ë—Ç —Å–∞–º.

üîÑ –ù–∞–∂–º–∏ ¬´–†–µ—Å—Ç–∞—Ä—Ç¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.
""", reply_markup=static_keyboard)
        return JSONResponse(content={"ok": True})

    # –û –ø—Ä–æ–µ–∫—Ç–µ: –≤—ã–≤–æ–¥–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ
    if text == "–û –ø—Ä–æ–µ–∫—Ç–µ":
        bot.send_message(chat_id=chat_id, text="""üõ† –≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç ‚Äî –Ω–µ —Ä–µ–∫–ª–∞–º–∞, –∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è.  
–û–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–µ—à–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é GPT ‚Äî –ø–æ–¥ –ª—é–±—É—é —Å—Ñ–µ—Ä—É, –Ω–∏—à—É –∏–ª–∏ —Ü–µ–ª—å.

ASKT ‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –ó–Ω–∞–Ω–∏–π.

üìå –ß—Ç–æ —ç—Ç–æ:
Telegram-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ç–≤–æ–∏ –º—ã—Å–ª–∏ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è GPT.  
–¢—ã –ø—Ä–æ—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—à—å —Å—Ñ–µ—Ä—É (–†–∞–±–æ—Ç–∞, –£—á—ë–±–∞, –ë–∏–∑–Ω–µ—Å, –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥) –∏ –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞ ‚Äî  
–æ—Å—Ç–∞–ª—å–Ω–æ–µ –¥–µ–ª–∞–µ—Ç –±–æ—Ç: —Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–º—Ç, –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –º–æ–¥–µ–ª–∏ –∏ –≤—ã–¥–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç.

üß† –ú–æ–¥–µ–ª—å:
–°–µ–π—á–∞—Å –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ GPT-3.5 Turbo ‚Äî –±—ã—Å—Ç—Ä–æ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ.  
–ù–æ –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á –±—É–¥–µ—Ç –≤–Ω–µ–¥—Ä—ë–Ω –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ GPT-4o (Turbo).

‚ö° GPT-4o –æ—Ç–∫—Ä–æ–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Äì –ü–æ–Ω–∏–º–∞–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∏ –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤  
‚Äì –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ  
‚Äì –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã  
‚Äì –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏, —Ç–∞–±–ª–∏—Ü–∞–º–∏, –∫–æ–¥–æ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)  
‚Äì –ë—ã—Å—Ç—Ä–∞—è —Ä–µ–∞–∫—Ü–∏—è –∏ —Å–Ω–∏–∂–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å GPT-4

üìà –ö—É–¥–∞ —Ä–∞—Å—Ç—ë—Ç:
ASKT ‚Äî —á–∞—Å—Ç—å —Å–µ—Ä–∏–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –ø–æ–ª–µ–∑–Ω—ã–º–∏.  
–ë—É–¥–µ—Ç –≤–∏—Ç—Ä–∏–Ω–∞, –Ω–æ–≤—ã–µ –±–æ—Ç—ã, –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã. –í—Å—ë ‚Äî –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ò–ò.  
–ö–∞–∂–¥—ã–π –ø—Ä–æ–¥—É–∫—Ç –±—É–¥–µ—Ç —Ç–æ—á–Ω—ã–º, –ø—Ä–æ—Å—Ç—ã–º –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º.

üß† –ß—Ç–æ —É–º–µ—é:
–°–æ–∑–¥–∞—é GPT-–ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ–¥ –∫–ª—é—á:  
‚Äì –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –ª–æ–≥–∏–∫–∞  
‚Äì –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥–µ–ª–µ–π  
‚Äì –ø—Ä–æ–º—Ç-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥ –æ—Ç —Ü–µ–ª–∏ –¥–æ –æ—Ç–∫–ª–∏–∫–∞  
‚Äì Telegram-–±–æ—Ç—ã, –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ–¥ –∑–∞–¥–∞—á–∏  
‚Äì —É–∑–∫–æ—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã –∏ API-–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã

‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å—Ç–µ–∫:
Python ¬∑ FastAPI ¬∑ Telegram Bot API ¬∑ Docker ¬∑ Railway ¬∑ OpenAI API ¬∑ Prompt Engineering

üõ† –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
‚Äì –ü–æ–º–æ–≥–∞—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ChatGPT —Å –Ω—É–∂–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ –∏ –æ–±–≤—è–∑–∫–æ–π  
‚Äì –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø–æ–≤–µ–¥–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á—É  
‚Äì –°–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é —á–µ—Ä–µ–∑ –≤–Ω—è—Ç–Ω—ã–π –ø—Ä–æ–º—Ç-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥: GPT —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º, –∞ –Ω–µ –±–æ–ª—Ç–∞–ª–∫–æ–π  
‚Äì –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —Ä–∞–±–æ—á–∏–π VPN –∏ —Å–µ—Ä–≤–∏—Å –ø–æ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–æ–∫ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –±–æ—é)

üéØ –ú–∏—Å—Å–∏—è:
–ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ GPT –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ ‚Äú–≤ —Ü–µ–ª–æ–º‚Äù, –∞ —Ç–æ—á–Ω–æ, –ø–æ–¥ —Å–µ–±—è.  
ASKT ‚Äî —ç—Ç–æ –Ω–µ –±–æ—Ç. –≠—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ò–ò –Ω–∞ —Ç–≤–æ–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.

üì¨ –î–ª—è —Å–≤—è–∑–∏: @veryhappyEpta

""", reply_markup=static_keyboard)
        return JSONResponse(content={"ok": True})

    if text == "–û—Ç–∑—ã–≤":
        bot.send_message(
            chat_id=chat_id,
            text="–•–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ? –ü–µ—Ä–µ—Ö–æ–¥–∏ —Å—é–¥–∞:\nüëâhttps://t.me/ASKTFeedback",
            reply_markup=static_keyboard
        )
        return JSONResponse(content={"ok": True})

    if text == "Help":
        bot.send_message(chat_id=chat_id, text="Help: –≤—ã–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É, –æ—Ç–≤–µ—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞, –ø–æ–ª—É—á–∏ –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç.", reply_markup=static_keyboard)
        return JSONResponse(content={"ok": True})

    step = state.get("step", 0)

    if step == 1 and "detail" not in state:
        state["detail"] = text
        state["step"] = 2
        user_states[chat_id] = state
        bot.send_message(chat_id=chat_id, text="–ö–∞–∫—É—é –∑–∞–¥–∞—á—É –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å?", reply_markup=static_keyboard)
        return JSONResponse(content={"ok": True})

    if step == 2 and "task" not in state:
        state["task"] = text
        state["step"] = 3
        user_states[chat_id] = state
        bot.send_message(chat_id=chat_id, text="–ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?", reply_markup=static_keyboard)
        return JSONResponse(content={"ok": True})

    if step == 3 and "goal" not in state:
        state["goal"] = text
        template_text = state.get("template", "")
        additions = (
            f"\n–ö–æ–Ω—Ç–µ–∫—Å—Ç: {state.get('detail','')}\n"
            f"–ó–∞–¥–∞—á–∞: {state.get('task','')}\n"
            f"–¶–µ–ª—å: {state.get('goal','')}"
        )
        prompt = template_text + additions

        messages = [
            {"role": "system", "content": "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ–º–µ –∑–∞–ø—Ä–æ—Å–∞. –î–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –ø–æ –∑–∞–¥–∞—á–µ –Ω–∏–∂–µ. –ù–∏–∫–∞–∫–∏—Ö –æ—Ü–µ–Ω–æ–∫ –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞ ‚Äî —Ç–æ–ª—å–∫–æ —Ä–µ—à–µ–Ω–∏–µ –ø–æ —Å—É—â–µ—Å—Ç–≤—É."},
            {"role": "user", "content": prompt}
        ]
        try:
            chat = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=messages
            )
            answer = chat.choices[0].message.content.strip()
        except Exception as e:
            answer = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {e}"

        bot.send_message(chat_id=chat_id, text="–ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ç–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:", reply_markup=static_keyboard)
        bot.send_message(chat_id=chat_id, text=answer, reply_markup=static_keyboard)
        # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–†–µ—Å—Ç–∞—Ä—Ç" –æ—Ç–¥–µ–ª—å–Ω–æ! –ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        user_states.pop(chat_id, None)
        return JSONResponse(content={"ok": True})

    # –õ—é–±–æ–π –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤–≤–æ–¥ ‚Äî —Å–±—Ä–æ—Å –∏ –≤—ã–±–æ—Ä —Å—Ñ–µ—Ä—ã
    bot.send_message(chat_id=chat_id, text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ù–∞–∂–º–∏ '–†–µ—Å—Ç–∞—Ä—Ç' –∏ –≤—ã–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É –∑–∞–Ω–æ–≤–æ.", reply_markup=static_keyboard)
    user_states.pop(chat_id, None)
    return JSONResponse(content={"ok": True})
